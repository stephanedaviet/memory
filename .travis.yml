# Gently inspired by https://raw.githubusercontent.com/mysterycommand/my-new-everything/master/.travis.yml
# You must sign into travis-ci.org and set the commit hook on your project for travis to
# run on your project. The secure: variable must be generated by running `travis encrypt`
# on a github oauth key that you can generate using curl.

language:
  node_js
node_js:
  - "stable"
notifications:
  irc: "irc.freenode.org#generator-travis-ci"
git:
  depth: 10
branches:
  only:
    - master
env:
  global:
    # GH_OAUTH_TOKEN is the oauth token generated as described at
    # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
    #
    # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
    #
    # It must be encrypted using the travis gem
    # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
    #
    # travis encrypt GH_OAUTH_TOKEN=XXXXXXXXXXXXXXX
    #
    # User specific env variables
    - secure: "dKcIXebCbEGAWvf+Ords3d23e8FHHm44ttnwhOzkGOxEApzy2rzj6O3Zus+c00ngZ9NYbzzfy0vpme+V3XnUbRhaum7X/D4v8FiI96rpqL06LiAG8HbYsQsOSP/dpiAaLNg8kirOVCxFIY9R9prdEKjTdXzQ3KtRUpE+nZHKIFAr9V1mP7eHsYL9La5d1t6mujPnNqHDqoFXmifVJJ3u+Z/ltrH4J/+BJYRur5pbCrsjf14NQ4osW4xd+W0iZaZUK6X5gVhjqVd7Q2dEsHhrJ+K8tC6+b8bOhB6dgsKBk9iHBSanPszsVe/O982+6c9wJls4ultvlhEkZ5rGQbzH4qBgYD8SszWP/PvPyE6dEhNzfihHbQF0Ltkm9m9Hyb30C5GZKzYYs20ATZeiD6oPixRayp7t3C6GJ79x8iJJx18x6GPvDB0wDHskFWeHWXF15h7vnNIiKML8U/pfWWlmb/x0+e6N5eYEYT+f1UoepGxVJVr69IVzO5TXxxN2wtQjodPRvDTfSlVh4PNMaIL7beEcidW7ymdfmmEGySv02IxvxS2VJBH87mpAP0a0xQlhSqZRrmrJmSP73cHdFCURqfJkxu9xVCwHwFOt8QtdO8E+xReDtK+oFvoADHzgPigxzWuAFDcOoB1K+XuJoiB+as0kaeQ+si+fvDAWrss8LQg="
    - GH_OWNER: stephanedaviet
    - GH_PROJECT_NAME: memory
    # This .travis.yml file instructs travis-ci.org to build your master branch using `yeoman build`
    # and deploy the output to your project's gh-pages branch.
    - CXX=g++-4.8
sudo: false
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - libcairo2-dev
      - libjpeg8-dev
      - libpango1.0-dev
      - libgif-dev
      - g++-4.8
install:
  - npm install --verbose canvas
script:
  - npm run build
after_success:
  - git config user.email "stephane.daviet@serli.com"
  - git config user.name "StÃ©phane Daviet"
  - git commit -am "Deploying latest built version to gh-pages"
  # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
  - git submodule add -b gh-pages https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} public > /dev/null 2>&1
  - cd public
  - if git checkout gh-pages; then git checkout -b gh-pages; fi
  - git add -f .
  # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
  - git push --force https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} HEAD:gh-pages > /dev/null 2>&1
